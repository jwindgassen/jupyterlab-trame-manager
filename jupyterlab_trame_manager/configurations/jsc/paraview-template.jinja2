{% set tasks_per_node = 4 %}

{% if cluster == "juwelsbooster" %}
  {% set cpus = 12 %}
  {% set has_gpu = True %}

{% elif cluster == "juwels" %}
  {% if partition in ["gpus", "develgpus"] %}
    {% set cpus = 10 %}
    {% set has_gpu = True %}
  {% else %}
    {% set cpus = 12 %}
    {% set has_gpu = False %}
  {% endif %}

{% elif cluster == "jurecadc" %}
  {% set cpus = 32 %}
  {% set has_gpu = partition in ["dc-gpu", "dc-gpu-devel"] %}

{% elif cluster == "jusuf" %}
  {% set cpus = 128 %}
  {% set has_gpu = partition in ["gpus", "develgpus"] %}
  {% set tasks_per_node = 1 %}

{%- endif -%}

#!/bin/bash
#SBATCH --account={{ account }}
#SBATCH --job-name="{{ name }}"
#SBATCH --output={{ stdout }}
#SBATCH --error={{ stderr }}
#SBATCH --nodes={{ nodes }}
#SBATCH --time={{ timeLimit }}

# Change this only with caution and with respect to "--displays="
#SBATCH --partition={{ partition }}
#SBATCH --ntasks-per-node={{ tasks_per_node }}
#SBATCH --cpus-per-task={{ cpus }}
{%- if has_gpu %}
#SBATCH --gres=gpu:{{ tasks_per_node }}"
{%- endif %}

# Load modules
module purge
module load Stages/2024
module load GCC/12.3.0 ParaStationMPI/5.9.2-1 ParaView/5.12.0-RC2-EGL
module load ParaViewPlugin-Nek5000/20230208-EGL
module list

{% if has_gpu %}
# Use nvidia
export __EGL_VENDOR_LIBRARY_FILENAMES=$EBROOTOPENGL/share/glvnd/egl_vendor.d/10_nvidia.json
nvidia-smi
{% else %}
# Use mesa
export __EGL_VENDOR_LIBRARY_FILENAMES=$EBROOTOPENGL/share/glvnd/egl_vendor.d/50_mesa.json
{% endif %}

# Some infos
which pvserver
eglinfo
{% if has_gpu %}
srun bash -c 'echo CUDA_VISIBLE_DEVICES: $CUDA_VISIBLE_DEVICES'
{% endif %}

export OMP_NUM_THREADS={{ cpus }}
export KNOB_MAX_WORKER_THREADS={{ cpus }}

# Start ParaView Server
{% set display = ",".join(map(str, range(tasks_per_node))) %}
{% if has_gpu %}
srun --cpu_bind=verbose,rank pvserver --mpi --force-offscreen-rendering --multi-clients --displays='{{ display }}' &
SRUN_PID=$!

sleep 10
nvidia-smi

wait $SRUN_PID
{% else %}
srun --cpu_bind=verbose,rank pvserver --mpi --force-offscreen-rendering --multi-clients --displays='{{ display }}'
{% endif %}