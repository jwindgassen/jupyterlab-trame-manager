#!/bin/bash
#SBATCH --account={{ account }}
#SBATCH --job-name="{{ name }}"
#SBATCH --output={{ stdout }}
#SBATCH --error={{ stderr }}
#SBATCH --nodes={{ nodes }}
#SBATCH --time={{ timeLimit }}

# change this only with caution and with respect to "--displays="
#SBATCH --partition={{ partition }}
#SBATCH --ntasks-per-node=4
#SBATCH --cpus-per-task=12
#SBATCH --gres=gpu:4

# load modules
module purge
module load Stages/2023
module load GCC/11.3.0 ParaStationMPI/5.7.1-1 ParaView/5.11.0-EGL
module load ParaViewPlugin-Nek5000/20230208-EGL
module list

# Choose MESA if we have no GPU, else SMI
USE_NV=0
echo "checking for GPU"
lspci -k | grep -A 2 -i "NVIDIA" | grep "Kernel driver in use:" | grep "nvidia"
if [ $? -ne 0 ]; then
    echo "Using MESA"
    export __EGL_VENDOR_LIBRARY_FILENAMES=$EBROOTOPENGL/share/glvnd/egl_vendor.d/50_mesa.json
else
   USE_NV=1
    echo "Using NVIDIA"
    export __EGL_VENDOR_LIBRARY_FILENAMES=$EBROOTOPENGL/share/glvnd/egl_vendor.d/10_nvidia.json
    nvidia-smi
fi

# Some infos
which pvserver
eglinfo
srun bash -c 'echo CUDA_VISIBLE_DEVICES: $CUDA_VISIBLE_DEVICES'

export OMP_NUM_THREADS=12
export KNOB_MAX_WORKER_THREADS=12
export PV_PLUGIN_PATH=$PV_PLUGIN_PATH/lib64/paraview-5.10/plugins/pvNek5000Reader

# Start ParaView Server
srun --cpu_bind=verbose,rank pvserver --mpi --force-offscreen-rendering --multi-clients --displays='0,1,2,3' &
SRUN_PID=$!

if [ $USE_NV -eq 1 ]; then
    sleep 10
    nvidia-smi
fi
wait $SRUN_PID
